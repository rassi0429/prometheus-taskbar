<Window x:Class="PrometheusTaskbar.Views.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PrometheusTaskbar.Views"
        mc:Ignorable="d"
        Title="Prometheus Taskbar 設定" Height="450" Width="600"
        WindowStartupLocation="CenterScreen">
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Tabs -->
        <TabControl Grid.Row="1" Margin="0,10,0,10">
            <!-- Connection Tab -->
            <TabItem Header="接続">
                <Grid Margin="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Label Grid.Row="0" Grid.Column="0" Content="Prometheusエンドポイント:" VerticalAlignment="Center"/>
                    <TextBox Grid.Row="0" Grid.Column="1" Margin="5" Text="{Binding ConnectionSettings.EndpointUrl}"/>
                    <Button Grid.Row="0" Grid.Column="2" Content="テスト" Margin="5" Padding="10,0" Click="TestConnection_Click"/>

                    <Label Grid.Row="1" Grid.Column="0" Content="接続タイムアウト:" VerticalAlignment="Center"/>
                    <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" Margin="5">
                        <TextBox Width="50" Text="{Binding ConnectionSettings.TimeoutSeconds}"/>
                        <Label Content="秒" VerticalAlignment="Center"/>
                    </StackPanel>

                    <Label Grid.Row="2" Grid.Column="0" Content="認証:" VerticalAlignment="Top" Margin="0,10,0,0"/>
                    <StackPanel Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="5,10,0,0">
                        <RadioButton Content="なし" IsChecked="{Binding IsNoAuth}" Margin="0,0,0,5"/>
                        <RadioButton Content="Basic認証" IsChecked="{Binding IsBasicAuth}" Margin="0,0,0,5"/>
                        
                        <Grid Margin="20,5,0,0" IsEnabled="{Binding IsBasicAuth}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            
                            <Label Grid.Row="0" Grid.Column="0" Content="ユーザー名:" VerticalAlignment="Center"/>
                            <TextBox Grid.Row="0" Grid.Column="1" Margin="5" Text="{Binding ConnectionSettings.Authentication.Username}"/>
                            
                            <Label Grid.Row="1" Grid.Column="0" Content="パスワード:" VerticalAlignment="Center"/>
                            <PasswordBox Grid.Row="1" Grid.Column="1" Margin="5" x:Name="PasswordBox"/>
                        </Grid>
                    </StackPanel>
                </Grid>
            </TabItem>

            <!-- Metrics Tab -->
            <TabItem Header="メトリクス">
                <Grid Margin="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Label Grid.Row="0" Content="表示するメトリクス:"/>
                    
                    <DataGrid Grid.Row="1" Margin="0,5,0,10" 
                              ItemsSource="{Binding Metrics}" 
                              AutoGenerateColumns="False"
                              CanUserAddRows="False"
                              CanUserDeleteRows="False"
                              SelectionMode="Single"
                              x:Name="MetricsDataGrid">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="メトリクス名" Binding="{Binding MetricName}" Width="*"/>
                            <DataGridTextColumn Header="表示名" Binding="{Binding DisplayName}" Width="*"/>
                            <DataGridTextColumn Header="単位" Binding="{Binding Unit}" Width="80"/>
                            <DataGridTemplateColumn Header="操作" Width="100">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Button Content="編集" Click="EditMetric_Click" Margin="2" Padding="5,0"/>
                                            <Button Content="削除" Click="DeleteMetric_Click" Margin="2" Padding="5,0"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>

                    <Button Grid.Row="2" Content="メトリクス追加" HorizontalAlignment="Left" Margin="0,0,0,10" Padding="10,2" Click="AddMetric_Click"/>

                    <StackPanel Grid.Row="3" Orientation="Horizontal">
                        <Label Content="更新間隔:" VerticalAlignment="Center"/>
                        <TextBox Width="50" Margin="5,0" Text="60"/>
                        <Label Content="秒" VerticalAlignment="Center"/>
                    </StackPanel>
                </Grid>
            </TabItem>

            <!-- Display Settings Tab -->
            <TabItem Header="表示設定">
                <Grid Margin="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Label Grid.Row="0" Content="表示形式:"/>
                    <StackPanel Grid.Row="1" Margin="20,5,0,10">
                        <RadioButton Content="数値のみ" IsChecked="{Binding DisplaySettings.Format, Converter={StaticResource EnumToBoolConverter}, ConverterParameter=ValueOnly}" Margin="0,0,0,5"/>
                        <RadioButton Content="名前: 数値" IsChecked="{Binding DisplaySettings.Format, Converter={StaticResource EnumToBoolConverter}, ConverterParameter=NameAndValue}" Margin="0,0,0,5"/>
                        <RadioButton Content="カスタム形式:" IsChecked="{Binding DisplaySettings.Format, Converter={StaticResource EnumToBoolConverter}, ConverterParameter=Custom}" Margin="0,0,0,5"/>
                        <TextBox Margin="20,0,0,0" Text="{Binding DisplaySettings.CustomFormat}" IsEnabled="{Binding DisplaySettings.Format, Converter={StaticResource EnumToBoolConverter}, ConverterParameter=Custom}"/>
                    </StackPanel>

                    <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="0,10,0,10">
                        <Label Content="小数点以下桁数:" VerticalAlignment="Center"/>
                        <TextBox Width="50" Text="{Binding DisplaySettings.DecimalPlaces}" Margin="5,0"/>
                    </StackPanel>

                    <CheckBox Grid.Row="3" Content="単位を表示" IsChecked="{Binding DisplaySettings.ShowUnit}" Margin="0,0,0,10"/>

                    <Label Grid.Row="4" Content="アラート設定:"/>
                    <Grid Grid.Row="5" Margin="20,5,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <CheckBox Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="4" Content="閾値を超えたら色を変える" IsChecked="{Binding DisplaySettings.Alert.Enabled}" Margin="0,0,0,5"/>
                        <Label Grid.Row="1" Grid.Column="0" Content="閾値:" VerticalAlignment="Center" IsEnabled="{Binding DisplaySettings.Alert.Enabled}"/>
                        <TextBox Grid.Row="1" Grid.Column="1" Width="50" Margin="5,0" Text="{Binding DisplaySettings.Alert.Threshold}" IsEnabled="{Binding DisplaySettings.Alert.Enabled}"/>
                        <Label Grid.Row="1" Grid.Column="2" Content="色:" VerticalAlignment="Center" Margin="10,0,0,0" IsEnabled="{Binding DisplaySettings.Alert.Enabled}"/>
                        <TextBox Grid.Row="1" Grid.Column="3" Width="70" Margin="5,0" Text="{Binding DisplaySettings.Alert.Color}" IsEnabled="{Binding DisplaySettings.Alert.Enabled}"/>
                    </Grid>

                    <CheckBox Grid.Row="6" Content="スタートアップ時に自動起動" IsChecked="{Binding DisplaySettings.AutoStartWithWindows}" Margin="0,20,0,0"/>
                </Grid>
            </TabItem>
        </TabControl>

        <!-- Buttons -->
        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Content="キャンセル" Width="80" Margin="0,0,10,0" Click="Cancel_Click"/>
            <Button Content="保存" Width="80" Click="Save_Click"/>
        </StackPanel>
    </Grid>
</Window>
